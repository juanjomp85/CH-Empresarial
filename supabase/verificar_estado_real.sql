-- =====================================================
-- VERIFICAR ESTADO REAL DE USUARIOS Y EMPLEADOS
-- =====================================================
-- Script para ver exactamente qu√© usuarios tienen empleado
-- y cu√°les no, antes de intentar crear empleados

-- =====================================================
-- 1. VER TODOS LOS USUARIOS EN AUTH
-- =====================================================

SELECT 
    '1Ô∏è‚É£ TODOS LOS USUARIOS EN AUTH' as seccion,
    email,
    created_at,
    confirmed_at,
    CASE 
        WHEN confirmed_at IS NULL THEN '‚ö†Ô∏è  No confirmado'
        ELSE '‚úÖ Confirmado'
    END as estado
FROM auth.users
ORDER BY created_at DESC;

-- =====================================================
-- 2. VER TODOS LOS EMPLEADOS
-- =====================================================

SELECT 
    '2Ô∏è‚É£ TODOS LOS EMPLEADOS' as seccion,
    email,
    full_name,
    role,
    is_active,
    created_at
FROM employees
ORDER BY created_at DESC;

-- =====================================================
-- 3. VER USUARIOS SIN EMPLEADO (JOIN CORRECTO)
-- =====================================================

-- Usuarios que existen en auth pero NO en employees
SELECT 
    '3Ô∏è‚É£ USUARIOS SIN EMPLEADO' as seccion,
    u.email,
    u.created_at,
    u.confirmed_at,
    CASE 
        WHEN u.confirmed_at IS NULL THEN '‚ö†Ô∏è  No confirmado'
        ELSE '‚úÖ Confirmado'
    END as estado,
    '‚ùå Sin empleado asociado' as problema
FROM auth.users u
LEFT JOIN employees e ON e.user_id = u.id
WHERE e.id IS NULL
ORDER BY u.created_at DESC;

-- =====================================================
-- 4. VER USUARIOS CON EMPLEADO (JOIN CORRECTO)
-- =====================================================

-- Usuarios que S√ç tienen empleado asociado
SELECT 
    '4Ô∏è‚É£ USUARIOS CON EMPLEADO' as seccion,
    u.email,
    u.created_at,
    u.confirmed_at,
    e.full_name as nombre_empleado,
    e.role as rol_empleado,
    e.is_active as empleado_activo
FROM auth.users u
INNER JOIN employees e ON e.user_id = u.id
ORDER BY u.created_at DESC;

-- =====================================================
-- 5. VERIFICAR EMAILS DUPLICADOS EN EMPLOYEES
-- =====================================================

-- Buscar emails duplicados en la tabla employees
SELECT 
    '5Ô∏è‚É£ EMAILS DUPLICADOS EN EMPLOYEES' as seccion,
    email,
    COUNT(*) as cantidad,
    '‚ùå Email duplicado' as problema
FROM employees
GROUP BY email
HAVING COUNT(*) > 1;

-- =====================================================
-- 6. VERIFICAR CONSTRAINT √öNICO EN EMAIL
-- =====================================================

-- Ver constraints de la tabla employees
SELECT 
    '6Ô∏è‚É£ CONSTRAINTS DE EMPLOYEES' as seccion,
    constraint_name,
    column_name,
    '‚úÖ Configurado' as estado
FROM information_schema.constraint_column_usage
WHERE table_name = 'employees'
AND constraint_name LIKE '%email%';

-- =====================================================
-- 7. BUSCAR EMPLEADO ESPEC√çFICO PROBLEM√ÅTICO
-- =====================================================

-- Buscar el empleado que est√° causando el conflicto
SELECT 
    '7Ô∏è‚É£ EMPLEADO PROBLEM√ÅTICO' as seccion,
    e.email,
    e.full_name,
    e.user_id,
    e.role,
    e.is_active,
    e.created_at,
    u.email as email_auth,
    u.created_at as fecha_auth
FROM employees e
LEFT JOIN auth.users u ON u.id = e.user_id
WHERE e.email = 'sentidodelocomun@gmail.com';

-- =====================================================
-- COMENTARIOS
-- =====================================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'üîç DIAGN√ìSTICO DEL ESTADO REAL:';
    RAISE NOTICE '';
    RAISE NOTICE '1Ô∏è‚É£  Ver todos los usuarios en auth.users';
    RAISE NOTICE '2Ô∏è‚É£  Ver todos los empleados en employees';
    RAISE NOTICE '3Ô∏è‚É£  Identificar usuarios sin empleado';
    RAISE NOTICE '4Ô∏è‚É£  Verificar usuarios con empleado';
    RAISE NOTICE '5Ô∏è‚É£  Buscar emails duplicados';
    RAISE NOTICE '6Ô∏è‚É£  Verificar constraints';
    RAISE NOTICE '7Ô∏è‚É£  Analizar empleado problem√°tico';
    RAISE NOTICE '';
    RAISE NOTICE 'üìù POSIBLES CAUSAS DEL ERROR:';
    RAISE NOTICE '   - sentidodelocomun@gmail.com ya tiene empleado';
    RAISE NOTICE '   - Hay un empleado con ese email pero user_id diferente';
    RAISE NOTICE '   - Constraint √∫nico en email est√° funcionando';
    RAISE NOTICE '';
    RAISE NOTICE '‚úÖ SOLUCI√ìN:';
    RAISE NOTICE '   - Identificar qu√© usuarios realmente necesitan empleado';
    RAISE NOTICE '   - Crear solo los que faltan';
    RAISE NOTICE '   - Evitar duplicados';
END $$;

-- =====================================================
-- NOTAS IMPORTANTES
-- =====================================================

/*
¬øPOR QU√â ESTE ERROR?

1Ô∏è‚É£  EMPLEADO YA EXISTE:
   - sentidodelocomun@gmail.com ya tiene empleado
   - El script intenta crearlo de nuevo
   - Constraint √∫nico en email lo impide

2Ô∏è‚É£  USER_ID DIFERENTE:
   - Puede haber un empleado con ese email
   - Pero asociado a un user_id diferente
   - Esto causar√≠a el conflicto

3Ô∏è‚É£  DATOS INCONSISTENTES:
   - Usuario en auth.users
   - Empleado en employees
   - Pero con user_id diferente

SOLUCI√ìN:
- Verificar el estado real
- Crear solo los empleados que faltan
- Evitar duplicados
*/
