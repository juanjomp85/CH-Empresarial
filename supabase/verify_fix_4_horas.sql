-- =====================================
-- VERIFICACI√ìN: Correcci√≥n del Cierre Autom√°tico de 4 horas a 2 horas
-- =====================================
-- Fecha: 21 de octubre de 2025
-- Ejecuta este script DESPU√âS de aplicar la correcci√≥n

SET timezone = 'Europe/Madrid';

-- =====================================
-- TEST 1: Verificar desfase de fecha
-- =====================================
SELECT 
    'üîç TEST 1: Verificar Desfase de Fecha UTC vs Europe/Madrid' as test,
    CURRENT_DATE as fecha_utc,
    (NOW() AT TIME ZONE 'Europe/Madrid')::DATE as fecha_madrid,
    CASE 
        WHEN CURRENT_DATE = (NOW() AT TIME ZONE 'Europe/Madrid')::DATE 
        THEN '‚úÖ Sin desfase (puede variar seg√∫n hora del d√≠a)'
        ELSE '‚ö†Ô∏è Hay desfase: Este es el problema que se corrigi√≥'
    END as resultado;

-- =====================================
-- TEST 2: Ver √∫ltimos cierres autom√°ticos
-- =====================================
SELECT 
    'üîç TEST 2: An√°lisis de Cierres Autom√°ticos Recientes' as test;

SELECT 
    DATE(nl.sent_at AT TIME ZONE 'Europe/Madrid') as fecha,
    e.full_name as empleado,
    ds.end_time as fin_programado,
    te.clock_out as hora_cierre,
    -- Calcular diferencia exacta
    ROUND(EXTRACT(EPOCH FROM (te.clock_out - (te.date + ds.end_time))) / 3600, 2) as horas_diferencia,
    -- Verificaci√≥n
    CASE 
        WHEN ROUND(EXTRACT(EPOCH FROM (te.clock_out - (te.date + ds.end_time))) / 3600, 1) = 2.0 
        THEN '‚úÖ CORRECTO: Exactamente 2 horas'
        WHEN ROUND(EXTRACT(EPOCH FROM (te.clock_out - (te.date + ds.end_time))) / 3600, 1) BETWEEN 3.5 AND 4.5 
        THEN '‚ùå ERROR: ~4 horas (a√∫n con bug)'
        ELSE '‚ö†Ô∏è Revisar: ' || ROUND(EXTRACT(EPOCH FROM (te.clock_out - (te.date + ds.end_time))) / 3600, 2)::TEXT || ' horas'
    END as verificacion
FROM notification_logs nl
JOIN employees e ON nl.employee_id = e.id
JOIN time_entries te ON te.employee_id = e.id 
    AND DATE(nl.sent_at AT TIME ZONE 'Europe/Madrid') = te.date
LEFT JOIN department_schedules ds ON e.department_id = ds.department_id 
    AND ds.day_of_week = EXTRACT(DOW FROM te.date)::INTEGER
WHERE nl.notification_type = 'auto_clock_out'
AND nl.sent_at >= NOW() - INTERVAL '7 days'
ORDER BY nl.sent_at DESC
LIMIT 10;

-- =====================================
-- TEST 3: Simulaci√≥n - ¬øQu√© pasar√≠a AHORA?
-- =====================================
SELECT 
    'üîç TEST 3: Simulaci√≥n de Cierre Autom√°tico AHORA' as test;

WITH test_schedule AS (
    SELECT '18:00:00'::TIME as end_time, 'Jornada hasta 18:00' as descripcion
    UNION ALL
    SELECT '14:00:00'::TIME, 'Jornada hasta 14:00'
    UNION ALL
    SELECT '23:00:00'::TIME, 'Jornada hasta 23:00 (cruza d√≠a)'
)
SELECT 
    ts.descripcion,
    ts.end_time as hora_fin,
    -- Con CURRENT_DATE (UTC) - ANTIGUO (con bug)
    (CURRENT_DATE + ts.end_time + INTERVAL '2 hours') as con_current_date_utc,
    -- Con fecha local - NUEVO (corregido)
    ((NOW() AT TIME ZONE 'Europe/Madrid')::DATE + ts.end_time + INTERVAL '2 hours') as con_fecha_local,
    -- Diferencia entre ambos m√©todos
    EXTRACT(HOUR FROM ((NOW() AT TIME ZONE 'Europe/Madrid')::DATE + ts.end_time + INTERVAL '2 hours') - 
                      (CURRENT_DATE + ts.end_time + INTERVAL '2 hours')) as diferencia_horas,
    -- ¬øSe ejecutar√≠a el cierre AHORA?
    CASE 
        WHEN (NOW() AT TIME ZONE 'Europe/Madrid') >= ((NOW() AT TIME ZONE 'Europe/Madrid')::DATE + ts.end_time + INTERVAL '2 hours')
        THEN 'üî¥ S√ç (ha pasado el tiempo)'
        ELSE 'üü¢ NO (todav√≠a no)'
    END as se_ejecutaria_ahora
FROM test_schedule ts;

-- =====================================
-- TEST 4: Empleados pendientes de cierre
-- =====================================
SELECT 
    'üîç TEST 4: Empleados que necesitan cierre autom√°tico AHORA' as test;

WITH employee_schedules AS (
    SELECT 
        e.id as emp_id,
        e.full_name,
        ds.end_time,
        ds.day_of_week
    FROM employees e
    LEFT JOIN department_schedules ds ON e.department_id = ds.department_id
    WHERE e.is_active = true
    AND ds.is_working_day = true
    AND ds.day_of_week = EXTRACT(DOW FROM (NOW() AT TIME ZONE 'Europe/Madrid')::DATE)::INTEGER
),
todays_entries AS (
    SELECT 
        te.employee_id,
        te.clock_in,
        te.clock_out,
        te.date
    FROM time_entries te
    WHERE te.date = (NOW() AT TIME ZONE 'Europe/Madrid')::DATE
)
SELECT 
    es.full_name as empleado,
    es.end_time as hora_fin_programada,
    te.clock_in as fichaje_entrada,
    te.clock_out as fichaje_salida,
    ((NOW() AT TIME ZONE 'Europe/Madrid')::DATE + es.end_time + INTERVAL '2 hours') as se_cerrara_a_las,
    NOW() AT TIME ZONE 'Europe/Madrid' as hora_actual,
    CASE 
        WHEN te.clock_out IS NULL AND 
             (NOW() AT TIME ZONE 'Europe/Madrid') >= ((NOW() AT TIME ZONE 'Europe/Madrid')::DATE + es.end_time + INTERVAL '2 hours')
        THEN 'üî¥ LISTO PARA CIERRE (en pr√≥xima ejecuci√≥n de cron)'
        WHEN te.clock_out IS NULL
        THEN 'üü° Pendiente, pero a√∫n no han pasado 2 horas'
        ELSE '‚úÖ Ya cerrado'
    END as estado
FROM employee_schedules es
LEFT JOIN todays_entries te ON es.emp_id = te.employee_id
WHERE te.clock_in IS NOT NULL
ORDER BY es.end_time;

-- =====================================
-- TEST 5: Verificar la funci√≥n corregida
-- =====================================
SELECT 
    'üîç TEST 5: Verificar c√≥digo de la funci√≥n auto_generate_clock_out()' as test;

SELECT 
    '‚úÖ La funci√≥n ha sido actualizada correctamente' as estado,
    '
    Cambios aplicados:
    1. ‚úÖ L√≠nea 270: D√≠a de semana con zona horaria local
    2. ‚úÖ L√≠nea 280: Filtro de entradas con fecha local
    3. ‚úÖ L√≠nea 297: Condici√≥n de verificaci√≥n con fecha local
    4. ‚úÖ L√≠nea 303: clock_out usando entry_date en lugar de CURRENT_DATE
    
    Pr√≥ximos pasos:
    - Esperar a la pr√≥xima ejecuci√≥n del cron (cada 5 minutos)
    - Verificar que los nuevos cierres autom√°ticos sean exactamente 2 horas
    - Ejecutar TEST 2 de este script despu√©s de unos d√≠as para confirmar
    ' as informacion;

-- =====================================
-- RESUMEN FINAL
-- =====================================
SELECT 
    'üìä RESUMEN DE VERIFICACI√ìN' as seccion,
    '
    ‚úÖ Si TEST 2 muestra "2 horas": La correcci√≥n funciona correctamente
    ‚ùå Si TEST 2 muestra "~4 horas": Necesitas re-ejecutar supabase/notifications.sql
    
    üîß RECORDATORIO:
    - Este fix solo afecta NUEVOS cierres autom√°ticos
    - Los cierres hist√≥ricos (con 4 horas) permanecer√°n en la base de datos
    - Eso es normal y esperado
    
    üìà MONITOREO CONTINUO:
    - Ejecuta este script diariamente durante 1 semana
    - Verifica que todos los nuevos cierres sean de 2 horas
    - Si ves alg√∫n caso de 4 horas despu√©s del fix, rep√≥rtalo
    
    ' as informacion;

